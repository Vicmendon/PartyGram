"""
Django settings for mainproject project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

from dotenv import load_dotenv

# Carregar variáveis do arquivo .env
load_dotenv()

# Uso das variáveis no Django
SECRET_KEY = os.getenv('SECRET_KEY', False)
DEBUG = True

CORS_ALLOWED_ORIGINS = [
    "https://partygram.star.dev.br",  # Seu domínio
    "http://partygram.star.dev.br",
]

CSRF_TRUSTED_ORIGINS = [
    "https://partygram.star.dev.br",
    "http://partygram.star.dev.br",
]

# Se quiser permitir todas as origens (⚠️ não recomendado para produção)
# CORS_ALLOW_ALL_ORIGINS = True  # Comente essa linha se quiser controle mais seguro

ALLOWED_HOSTS = [
    '127.0.0.1',
    'localhost',
    'partygram.star.dev.br',  # Domínio permitido
    '138.84.58.101',  # IP do servidor permitido
]

#config de backends
AUTHENTICATION_BACKENDS = [
    'users.backends.EmailAuthBackend',  # Backend customizado para login com e-mail
    'django.contrib.auth.backends.ModelBackend',  # Backend padrão do Django (opcional)
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'custo',
    'evento',
    'convidado',
    'midia',
    'users',
    'home'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mainproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mainproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# url de login para redirecionamento
LOGIN_URL = "login"
# models do user para alterar o padrao do django
AUTH_USER_MODEL = "users.User"

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# URL para acessar arquivos estáticos
STATIC_URL = "/static/"

# Diretórios onde os arquivos estáticos personalizados estão armazenados
STATICFILES_DIRS = [BASE_DIR / "static"]

# Diretório onde os arquivos estáticos serão coletados no ambiente de produção
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"  # Pode ser 'db' ou 'cache'
SESSION_COOKIE_AGE = 1209600  # 2 semanas (se lembrar do usuário)
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Por padrão, False (iremos modificar dinamicamente)
SESSION_COOKIE_SECURE = False  # Se for HTTPS, precisa ser True
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = "Lax"

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "unique-cache",
    }
}


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv("EMAIL_HOST") 
EMAIL_PORT = int(os.getenv("EMAIL_PORT", 587))
EMAIL_USE_TLS = True if os.getenv("EMAIL_USE_TLS") == "True" else False
EMAIL_USE_SSL = True if os.getenv("EMAIL_USE_SSL") == "True" else False
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")
